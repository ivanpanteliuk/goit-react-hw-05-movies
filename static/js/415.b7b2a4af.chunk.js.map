{"version":3,"file":"static/js/415.b7b2a4af.chunk.js","mappings":"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","sources":["components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","pages/Home.jsx","helpers/normalizeTrendingAndQueryData.js","services/API-service.js","helpers/normalizeMovieDetailsData.js","helpers/normalizeCastData.js","helpers/normalizeReviewData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 90px) / 4);\n  background-color: rgb(31, 30, 43);\n  box-shadow: 0 3px 6px -2px rgba(0, 0, 0, 0.2), 0 6px 12px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 2px 2px 18px 6px rgba(255, 31, 31, 1);\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 555px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 2;\n  letter-spacing: 0.06em;'\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n\n  height: 100%;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 370px;\n  padding: 20px;\n  background-color: rgb(31, 30, 43);\n  color: #fff;\n  flex-grow: 1;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Image,\n  ImageWrapper,\n  List,\n  ListItem,\n  StyledLink,\n  TitleWrapper,\n} from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ moviesArr }) {\n  const location = useLocation();\n  return (\n    <List>\n      {moviesArr.map(({ id, title, imageUrl }) => (\n        <ListItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <ImageWrapper>\n              <Image src={imageUrl} alt={title} width=\"370\" />\n            </ImageWrapper>\n            <TitleWrapper>\n              <h2>{title}</h2>\n            </TitleWrapper>\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport { MoviesAPI } from 'services/API-service';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport { Container, MainTitle, Section } from 'components/App/App.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Home() {\n  const [trendingMoviesArr, setTrendingMoviesArr] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await MoviesAPI.fetchTrending();\n        setTrendingMoviesArr(data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        {error && (\n          <p style={{ fontSize: '40px', color: '#fff', textAlign: 'center' }}>\n            Ops, something went wrong\n          </p>\n        )}\n        <MainTitle>Trending today</MainTitle>\n        {isLoading && <Loader top=\"50\" />}\n        <MoviesGallery moviesArr={trendingMoviesArr} />\n      </Container>\n    </Section>\n  );\n}\n","export function normalizeTrendingAndQueryData(dataArr) {\n  return dataArr.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    imageUrl: poster_path\n      ? `https://image.tmdb.org/t/p/w400${poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  }));\n}\n","import { normalizeCastData } from 'helpers/normalizeCastData';\nimport { normalizeMovieDetailsData } from 'helpers/normalizeMovieDetailsData';\nimport { normalizeReviewData } from 'helpers/normalizeReviewData';\nimport { normalizeTrendingAndQueryData } from 'helpers/normalizeTrendingAndQueryData';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=4be2754f05f22adf5c9807436c0754eb';\nconst TRENDING_MOVIES = 'trending/movie/day';\n\nexport const MoviesAPI = {\n  async fetchTrending() {\n    const URL = `${BASE_URL}${TRENDING_MOVIES}${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeTrendingAndQueryData(results);\n  },\n\n  async fetchMovieDetails(id) {\n    const URL = `${BASE_URL}movie/${id}${KEY}`;\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeMovieDetailsData(data);\n  },\n\n  async fetchCast(id) {\n    const URL = `${BASE_URL}movie/${id}/credits${KEY}`;\n\n    const response = await fetch(URL);\n    const { cast } = await response.json();\n\n    return normalizeCastData(cast);\n  },\n\n  async fetchReviews(id) {\n    const URL = `${BASE_URL}movie/${id}/reviews${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeReviewData(results);\n  },\n\n  async fetchMoviesByQuery(query) {\n    const URL = `${BASE_URL}search/movie${KEY}&query=${query}`;\n\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeTrendingAndQueryData(data.results);\n  },\n};\n","export function normalizeMovieDetailsData(dataObj) {\n  return {\n    title: dataObj.title,\n    userScore: Math.floor(Math.ceil(dataObj.vote_average * 100) / 10) + '%',\n    overview: dataObj.overview,\n    genres: dataObj.genres.map(genre => genre.name).join(', '),\n    year: new Date(dataObj.release_date).getFullYear(),\n    imageUrl: dataObj.poster_path\n      ? `https://image.tmdb.org/t/p/w500${dataObj.poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  };\n}\n","export function normalizeCastData(dataArr) {\n  return dataArr\n    .filter(el => el.profile_path)\n    .map(({ cast_id, character, name, profile_path }) => ({\n      id: cast_id,\n      character,\n      name,\n      imageUrl: `https://image.tmdb.org/t/p/w300${profile_path}`,\n    }));\n}\n","export function normalizeReviewData(dataArr) {\n  return dataArr.map(({ author, content, id }) => ({ author, content, id }));\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["List","styled","ListItem","ImageWrapper","StyledLink","Link","TitleWrapper","Image","MoviesGallery","moviesArr","location","useLocation","map","id","title","imageUrl","to","state","from","src","alt","width","Home","useState","trendingMoviesArr","setTrendingMoviesArr","isLoading","setIsLoading","error","setError","useEffect","MoviesAPI","data","console","log","style","fontSize","color","textAlign","top","normalizeTrendingAndQueryData","dataArr","poster_path","BASE_URL","KEY","fetchTrending","URL","fetch","response","json","results","fetchMovieDetails","dataObj","userScore","Math","floor","ceil","vote_average","overview","genres","genre","name","join","year","Date","release_date","getFullYear","fetchCast","cast","filter","el","profile_path","cast_id","character","fetchReviews","author","content","fetchMoviesByQuery","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}