{"version":3,"file":"static/js/33.47086322.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","helpers/normalizeTrendingAndQueryData.js","services/API-service.js","helpers/normalizeMovieDetailsData.js","helpers/normalizeCastData.js","helpers/normalizeReviewData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const GoBackBtn = styled(Link)`\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n  background-color: #171c28;\n  color: #ffffff;\n  text-decoration: none;\n  position: relative;\n  padding: 10px 15px;\n  border-radius: 20px;\n  transition: all 0.2s ease-in-out;\n  overflow: hidden;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n\n  &:hover {\n    color: #ffbd2a;\n    transform: translateY(-5px);\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.7);\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-top: 40px;\n`;\n\nexport const Wrap = styled.div`\n  color: #fff;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 37px;\n  font-weight: bold;\n  margin-bottom: 50px;\n  margin-top: 50px;\n  color: #ffbd2a;\n`;\n\nexport const Text = styled.p`\n  font-size: 30px;\n  margin-bottom: 50px;\n  margin-top: 50px;\n`;\n\nexport const TextSpan = styled.span`\n  font-size: 30px;\n  font-weight: bold;\n  color: #ffbd2a;\n`;\n\nexport const Subtitle = styled.h3`\n  font-size: 30px;\n  font-weight: bold;\n  margin-bottom: 50px;\n  margin-top: 50px;\n  color: #ffbd2a;\n`;\n\nexport const StyledTextLink = styled(NavLink)`\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n  background-color: #171c28;\n  color: #ffffff;\n  text-decoration: none;\n  position: relative;\n  padding: 10px 15px;\n  border-radius: 20px;\n  transition: all 0.2s ease-in-out;\n  overflow: hidden;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n\n  &:hover {\n    color: #ffbd2a;\n    transform: translateY(-5px);\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.7);\n  }\n\n  &.active {\n    background-color: #ffbd2a;\n    color: #171c28;\n  }\n`;\n\nexport const AddList = styled.ul`\n  display: flex;\n  gap: 50px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { MoviesAPI } from 'services/API-service';\nimport { Container, Section } from 'components/App/App.styled';\nimport {\n  AddList,\n  DetailsWrapper,\n  GoBackBtn,\n  MovieTitle,\n  StyledTextLink,\n  Subtitle,\n  Text,\n  TextSpan,\n  Wrap,\n} from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backPath = useRef(location.state?.from ?? '/movies');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await MoviesAPI.fetchMovieDetails(id);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  return (\n    <Section>\n      <Container>\n        {error && (\n          <p style={{ fontSize: '40px', color: '#fff', textAlign: 'center' }}>\n            Ops, something went wrong\n          </p>\n        )}\n        {isLoading && <Loader top=\"50\" />}\n        <GoBackBtn to={backPath.current}>Go Back</GoBackBtn>\n        {Object.keys(movie).length && (\n          <DetailsWrapper>\n            <img src={movie.imageUrl} alt={movie.title} width=\"500\" />\n            <Wrap>\n              <MovieTitle>{movie.title + `(${movie.year})`}</MovieTitle>\n              <Text>\n                <TextSpan>User score:</TextSpan> {movie.userScore}\n              </Text>\n              <Subtitle>Overview</Subtitle>\n              <Text>{movie.overview}</Text>\n              <Subtitle>Genres</Subtitle>\n              <Text>{movie.genres}</Text>\n              <Subtitle>Additional information</Subtitle>\n              <AddList>\n                <li>\n                  <StyledTextLink to=\"cast\"> Cast </StyledTextLink>\n                </li>\n                <li>\n                  <StyledTextLink to=\"reviews\"> Reviews </StyledTextLink>\n                </li>\n              </AddList>\n            </Wrap>\n          </DetailsWrapper>\n        )}\n        <Suspense fallback={<Loader top=\"10\" />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Section>\n  );\n}\n","export function normalizeTrendingAndQueryData(dataArr) {\n  return dataArr.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    imageUrl: poster_path\n      ? `https://image.tmdb.org/t/p/w400${poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  }));\n}\n","import { normalizeCastData } from 'helpers/normalizeCastData';\nimport { normalizeMovieDetailsData } from 'helpers/normalizeMovieDetailsData';\nimport { normalizeReviewData } from 'helpers/normalizeReviewData';\nimport { normalizeTrendingAndQueryData } from 'helpers/normalizeTrendingAndQueryData';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=4be2754f05f22adf5c9807436c0754eb';\nconst TRENDING_MOVIES = 'trending/movie/day';\n\nexport const MoviesAPI = {\n  async fetchTrending() {\n    const URL = `${BASE_URL}${TRENDING_MOVIES}${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeTrendingAndQueryData(results);\n  },\n\n  async fetchMovieDetails(id) {\n    const URL = `${BASE_URL}movie/${id}${KEY}`;\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeMovieDetailsData(data);\n  },\n\n  async fetchCast(id) {\n    const URL = `${BASE_URL}movie/${id}/credits${KEY}`;\n\n    const response = await fetch(URL);\n    const { cast } = await response.json();\n\n    return normalizeCastData(cast);\n  },\n\n  async fetchReviews(id) {\n    const URL = `${BASE_URL}movie/${id}/reviews${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeReviewData(results);\n  },\n\n  async fetchMoviesByQuery(query) {\n    const URL = `${BASE_URL}search/movie${KEY}&query=${query}`;\n\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeTrendingAndQueryData(data.results);\n  },\n};\n","export function normalizeMovieDetailsData(dataObj) {\n  return {\n    title: dataObj.title,\n    userScore: Math.floor(Math.ceil(dataObj.vote_average * 100) / 10) + '%',\n    overview: dataObj.overview,\n    genres: dataObj.genres.map(genre => genre.name).join(', '),\n    year: new Date(dataObj.release_date).getFullYear(),\n    imageUrl: dataObj.poster_path\n      ? `https://image.tmdb.org/t/p/w500${dataObj.poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  };\n}\n","export function normalizeCastData(dataArr) {\n  return dataArr\n    .filter(el => el.profile_path)\n    .map(({ cast_id, character, name, profile_path }) => ({\n      id: cast_id,\n      character,\n      name,\n      imageUrl: `https://image.tmdb.org/t/p/w300${profile_path}`,\n    }));\n}\n","export function normalizeReviewData(dataArr) {\n  return dataArr.map(({ author, content, id }) => ({ author, content, id }));\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["GoBackBtn","styled","Link","DetailsWrapper","Wrap","MovieTitle","Text","TextSpan","Subtitle","StyledTextLink","NavLink","AddList","MovieDetails","id","useParams","useState","movie","setMovie","location","useLocation","backPath","useRef","state","from","isLoading","setIsLoading","error","setError","useEffect","MoviesAPI","data","console","log","style","fontSize","color","textAlign","Loader","top","to","current","Object","keys","length","src","imageUrl","alt","title","width","year","userScore","overview","genres","Suspense","fallback","normalizeTrendingAndQueryData","dataArr","map","poster_path","BASE_URL","KEY","fetchTrending","URL","fetch","response","json","results","fetchMovieDetails","dataObj","Math","floor","ceil","vote_average","genre","name","join","Date","release_date","getFullYear","fetchCast","cast","filter","el","profile_path","cast_id","character","fetchReviews","author","content","fetchMoviesByQuery","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}