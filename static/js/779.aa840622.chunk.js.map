{"version":3,"file":"static/js/779.aa840622.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","helpers/normalizeTrendingAndQueryData.js","services/API-service.js","helpers/normalizeMovieDetailsData.js","helpers/normalizeCastData.js","helpers/normalizeReviewData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RevListItem = styled.li`\n  padding: 20px;\n  margin-bottom: 30px;\n  border: 9px inset #7e00ff;\n  border-radius: 7px 40px 0px 40px;\n  box-shadow: 0 3px 6px -2px rgba(0, 0, 0, 0.2), 0 6px 12px rgba(0, 0, 0, 0.1);\n`;\n\nexport const RevSubtitle = styled.h3`\n  color: #ffbd2a;\n  font-weight: bold;\n  margin-bottom: 15px;\n  font-size: 25px;\n`;\n\nexport const RevText = styled.p`\n  font-size: 20px;\n  color: #fff;\n  margin-bottom: 15px;\n  letter-spacing: 1px;\n  line-height: 1.5555;\n`;\n","import { Section } from 'components/App/App.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MoviesAPI } from 'services/API-service';\nimport { RevListItem, RevSubtitle, RevText } from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Reviews() {\n  const { id: movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await MoviesAPI.fetchReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      {!reviews && (\n        <p style={{ fontSize: '40px', color: '#fff', textAlign: 'center' }}>\n          We don't have any reviews for this movie\n        </p>\n      )}\n      {error && (\n        <p style={{ fontSize: '40px', color: '#fff', textAlign: 'center' }}>\n          Ops, something went wrong\n        </p>\n      )}\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <RevListItem key={id}>\n            <RevSubtitle>Author: {author}</RevSubtitle>\n            <RevText>{content}</RevText>\n          </RevListItem>\n        ))}\n      </ul>\n    </Section>\n  );\n}\n","export function normalizeTrendingAndQueryData(dataArr) {\n  return dataArr.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    imageUrl: poster_path\n      ? `https://image.tmdb.org/t/p/w400${poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  }));\n}\n","import { normalizeCastData } from 'helpers/normalizeCastData';\nimport { normalizeMovieDetailsData } from 'helpers/normalizeMovieDetailsData';\nimport { normalizeReviewData } from 'helpers/normalizeReviewData';\nimport { normalizeTrendingAndQueryData } from 'helpers/normalizeTrendingAndQueryData';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=4be2754f05f22adf5c9807436c0754eb';\nconst TRENDING_MOVIES = 'trending/movie/day';\n\nexport const MoviesAPI = {\n  async fetchTrending() {\n    const URL = `${BASE_URL}${TRENDING_MOVIES}${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeTrendingAndQueryData(results);\n  },\n\n  async fetchMovieDetails(id) {\n    const URL = `${BASE_URL}movie/${id}${KEY}`;\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeMovieDetailsData(data);\n  },\n\n  async fetchCast(id) {\n    const URL = `${BASE_URL}movie/${id}/credits${KEY}`;\n\n    const response = await fetch(URL);\n    const { cast } = await response.json();\n\n    return normalizeCastData(cast);\n  },\n\n  async fetchReviews(id) {\n    const URL = `${BASE_URL}movie/${id}/reviews${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeReviewData(results);\n  },\n\n  async fetchMoviesByQuery(query) {\n    const URL = `${BASE_URL}search/movie${KEY}&query=${query}`;\n\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeTrendingAndQueryData(data.results);\n  },\n};\n","export function normalizeMovieDetailsData(dataObj) {\n  return {\n    title: dataObj.title,\n    userScore: Math.floor(Math.ceil(dataObj.vote_average * 100) / 10) + '%',\n    overview: dataObj.overview,\n    genres: dataObj.genres.map(genre => genre.name).join(', '),\n    year: new Date(dataObj.release_date).getFullYear(),\n    imageUrl: `https://image.tmdb.org/t/p/w500${dataObj.poster_path}`,\n  };\n}\n","export function normalizeCastData(dataArr) {\n  return dataArr\n    .filter(el => el.profile_path)\n    .map(({ cast_id, character, name, profile_path }) => ({\n      id: cast_id,\n      character,\n      name,\n      imageUrl: `https://image.tmdb.org/t/p/w300${profile_path}`,\n    }));\n}\n","export function normalizeReviewData(dataArr) {\n  return dataArr.map(({ author, content, id }) => ({ author, content, id }));\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["RevListItem","styled","RevSubtitle","RevText","Reviews","movieId","useParams","id","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","MoviesAPI","data","console","log","Loader","style","fontSize","color","textAlign","map","author","content","normalizeTrendingAndQueryData","dataArr","title","poster_path","imageUrl","BASE_URL","KEY","fetchTrending","URL","fetch","response","json","results","fetchMovieDetails","dataObj","userScore","Math","floor","ceil","vote_average","overview","genres","genre","name","join","year","Date","release_date","getFullYear","fetchCast","cast","filter","el","profile_path","cast_id","character","fetchReviews","fetchMoviesByQuery","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}