{"version":3,"file":"static/js/593.5164463f.chunk.js","mappings":"gOAGaA,EAAOC,EAAAA,EAAAA,GAAH,4EAMJC,EAAWD,EAAAA,EAAAA,GAAH,gSAWRE,EAAeF,EAAAA,EAAAA,IAAH,sFAYZG,GANQH,EAAAA,EAAAA,GAAH,4FAMQA,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,yFAOVK,EAAeL,EAAAA,EAAAA,IAAH,+NAYZM,EAAQN,EAAAA,EAAAA,IAAH,+E,SCvCH,SAASO,EAAT,GAAuC,IAAdC,EAAa,EAAbA,UAChCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACX,EAAD,UACGS,EAAUG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAd,OACb,SAACb,EAAD,WACE,UAACE,EAAD,CAAYY,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,SAACP,EAAD,WACE,SAACI,EAAD,CAAOY,IAAKJ,EAAUK,IAAKN,EAAOO,MAAM,WAE1C,SAACf,EAAD,WACE,wBAAKQ,UANID,EADF,KAcpB,C,8LC5BYS,EAAcrB,EAAAA,EAAAA,IAAH,ufAoBXsB,EAAatB,EAAAA,EAAAA,KAAH,2OAWVuB,EAASvB,EAAAA,EAAAA,OAAH,oRAeNwB,EAAcxB,EAAAA,EAAAA,KAAH,6NAaXyB,EAAczB,EAAAA,EAAAA,MAAH,yU,SClDT,SAAS0B,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAYK,SAfU,SAAAI,GACxBA,EAAIC,iBAEiB,KAAjBH,EAAMI,SAEVN,EAASE,EAAMI,QACfH,EAAS,IACV,EAQG,WACE,UAACP,EAAD,CAAQW,KAAK,SAAb,WACE,SAAC,MAAD,CAAUC,KAAK,UACf,SAACX,EAAD,yBAGF,SAACC,EAAD,CACES,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOV,EACPW,SAlBkB,SAAAT,GACxBD,EAASC,EAAIU,OAAOF,MAAMG,cAC3B,QAqBF,C,wBCtCc,SAASC,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsClB,EAAAA,EAAAA,UAAQ,UAC5CiB,EAAaE,IAAI,gBAD2B,QACf,IAD/B,eAAOC,EAAP,KAAoBC,EAApB,KAGA,GAA4BrB,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAAkCvB,EAAAA,EAAAA,WAAS,GAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACA,GAA0BzB,EAAAA,EAAAA,UAAS,MAAnC,eAAO0B,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACHR,IAGL,iBAAC,2FACCK,GAAa,GADd,kBAGsBI,EAAAA,EAAAA,mBAA6BT,GAHnD,OAGSU,EAHT,OAIGP,EAAUO,GAJb,gDAMGC,QAAQC,IAAR,MACAL,EAAS,EAAD,IAPX,yBASGF,GAAa,GAThB,2EAAD,EAYD,GAAE,CAACL,IAOJ,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAACtB,EAAD,CAAWC,SARA,SAAAE,GACfoB,EAAepB,GACfiB,EAAgB,CAAEjB,MAAAA,GACnB,IAMMyB,IACC,cAAGO,MAAO,CAAEC,SAAU,OAAQC,MAAO,OAAQC,UAAW,UAAxD,uCAIDZ,IAAa,SAACa,EAAA,EAAD,KACd,SAAC1D,EAAA,EAAD,CAAeC,UAAW0C,QAIjC,C,wFCtDM,SAASgB,EAA8BC,GAC5C,OAAOA,EAAQxD,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOuD,EAAd,EAAcA,YAAd,MAAiC,CAClDxD,GAAAA,EACAC,MAAAA,EACAC,SAAUsD,EAAW,yCACiBA,GAClC,6EALa,GAOpB,CCHD,IAAMC,EAAW,gCACXC,EAAM,4CAGCb,EAAY,CACjBc,cADiB,WACA,OAAD,kHACdC,EADc,UACLH,GADK,OAHA,sBAGA,OACwBC,GADxB,SAGGG,MAAMD,GAHT,cAGdE,EAHc,gBAIMA,EAASC,OAJf,uBAIZC,EAJY,EAIZA,QAJY,kBAMbV,EAA8BU,IANjB,4CAOrB,EAEKC,kBAViB,SAUCjE,GAAK,OAAD,gHACpB4D,EADoB,UACXH,EADW,iBACMzD,GADN,OACW0D,GADX,SAEHG,MAAMD,GAFH,cAEpBE,EAFoB,gBAGPA,EAASC,OAHF,cAGpBjB,EAHoB,yBClBrB,CACL7C,OAFsCiE,EDwBLpB,GCtBlB7C,MACfkE,UAAWC,KAAKC,MAAMD,KAAKE,KAA4B,IAAvBJ,EAAQK,cAAsB,IAAM,IACpEC,SAAUN,EAAQM,SAClBC,OAAQP,EAAQO,OAAO1E,KAAI,SAAA2E,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrDC,KAAM,IAAIC,KAAKZ,EAAQa,cAAcC,cACrC9E,SAAUgE,EAAQV,YAAR,yCAC4BU,EAAQV,aAC1C,+EDUsB,iCCnBvB,IAAmCU,CDmBZ,WAM3B,EAEKe,UAlBiB,SAkBPjF,GAAK,OAAD,kHACZ4D,EADY,UACHH,EADG,iBACczD,EADd,mBAC2B0D,GAD3B,SAGKG,MAAMD,GAHX,cAGZE,EAHY,gBAIKA,EAASC,OAJd,uBAIVmB,EAJU,EAIVA,KAJU,kBAMOA,EE/BxBC,QAAO,SAAAC,GAAE,OAAIA,EAAGC,YAAP,IACTtF,KAAI,gBAAGuF,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWZ,EAAvB,EAAuBA,KAAMU,EAA7B,EAA6BA,aAA7B,MAAiD,CACpDrF,GAAIsF,EACJC,UAAAA,EACAZ,KAAAA,EACAzE,SAAS,kCAAD,OAAoCmF,GAJzC,KFwBa,4CAOnB,EAEKG,aA3BiB,SA2BJxF,GAAK,OAAD,kHACf4D,EADe,UACNH,EADM,iBACWzD,EADX,mBACwB0D,GADxB,SAGEG,MAAMD,GAHR,cAGfE,EAHe,gBAIKA,EAASC,OAJd,uBAIbC,EAJa,EAIbA,QAJa,kBAMMA,EGzCdjE,KAAI,kBAA8B,CAAE0F,OAAhC,EAAGA,OAAqCC,QAAxC,EAAWA,QAAsC1F,GAAjD,EAAoBA,GAApB,KHmCI,4CAOtB,EAEK2F,mBApCiB,SAoCE1E,GAAQ,OAAD,gHACxB2C,EADwB,UACfH,EADe,uBACQC,EADR,kBACqBzC,GADrB,SAGP4C,MAAMD,GAHC,cAGxBE,EAHwB,gBAIXA,EAASC,OAJE,cAIxBjB,EAJwB,yBAMvBQ,EAA8BR,EAAKkB,UANZ,4CAO/B,E","sources":["components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","helpers/normalizeTrendingAndQueryData.js","services/API-service.js","helpers/normalizeMovieDetailsData.js","helpers/normalizeCastData.js","helpers/normalizeReviewData.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 90px) / 4);\n  background-color: rgb(31, 30, 43);\n  box-shadow: 0 3px 6px -2px rgba(0, 0, 0, 0.2), 0 6px 12px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 2px 2px 18px 6px rgba(255, 31, 31, 1);\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 555px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 2;\n  letter-spacing: 0.06em;'\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n\n  height: 100%;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 370px;\n  padding: 20px;\n  background-color: rgb(31, 30, 43);\n  color: #fff;\n  flex-grow: 1;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Image,\n  ImageWrapper,\n  List,\n  ListItem,\n  StyledLink,\n  TitleWrapper,\n} from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ moviesArr }) {\n  const location = useLocation();\n  return (\n    <List>\n      {moviesArr.map(({ id, title, imageUrl }) => (\n        <ListItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <ImageWrapper>\n              <Image src={imageUrl} alt={title} width=\"370\" />\n            </ImageWrapper>\n            <TitleWrapper>\n              <h2>{title}</h2>\n            </TitleWrapper>\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 60px;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: rgba(23, 28, 40, 0.45526516270570727);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: rgba(55, 25, 87, 0.46366852405024506);\n  border-radius: 3px;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #ffbd2a;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n  color: #000;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: rgba(55, 25, 87, 0.46366852405024506);\n  color: #fff;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { useState } from 'react';\nimport {\n  Button,\n  SearchForm,\n  ButtonLabel,\n  SearchInput,\n  FormWrapper,\n} from './SearchForm.styled';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const formSubmitHandler = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') return;\n\n    onSubmit(query.trim());\n    setQuery('');\n  };\n\n  const handleInputChange = evt => {\n    setQuery(evt.target.value.toLowerCase());\n  };\n\n  return (\n    <FormWrapper>\n      <SearchForm onSubmit={formSubmitHandler}>\n        <Button type=\"submit\">\n          <BsSearch size=\"24px\" />\n          <ButtonLabel>Search</ButtonLabel>\n        </Button>\n\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleInputChange}\n        />\n      </SearchForm>\n    </FormWrapper>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Container, Section } from 'components/App/App.styled';\nimport Loader from 'components/Loader/Loader';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport Searchbar from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesAPI } from 'services/API-service';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') ?? ''\n  );\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await MoviesAPI.fetchMoviesByQuery(searchQuery);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [searchQuery]);\n\n  const onSubmit = query => {\n    setSearchQuery(query);\n    setSearchParams({ query });\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Searchbar onSubmit={onSubmit} />\n        {error && (\n          <p style={{ fontSize: '40px', color: '#fff', textAlign: 'center' }}>\n            Ops, something went wrong\n          </p>\n        )}\n        {isLoading && <Loader />}\n        <MoviesGallery moviesArr={movies} />\n      </Container>\n    </Section>\n  );\n}\n","export function normalizeTrendingAndQueryData(dataArr) {\n  return dataArr.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    imageUrl: poster_path\n      ? `https://image.tmdb.org/t/p/w400${poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  }));\n}\n","import { normalizeCastData } from 'helpers/normalizeCastData';\nimport { normalizeMovieDetailsData } from 'helpers/normalizeMovieDetailsData';\nimport { normalizeReviewData } from 'helpers/normalizeReviewData';\nimport { normalizeTrendingAndQueryData } from 'helpers/normalizeTrendingAndQueryData';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=4be2754f05f22adf5c9807436c0754eb';\nconst TRENDING_MOVIES = 'trending/movie/day';\n\nexport const MoviesAPI = {\n  async fetchTrending() {\n    const URL = `${BASE_URL}${TRENDING_MOVIES}${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeTrendingAndQueryData(results);\n  },\n\n  async fetchMovieDetails(id) {\n    const URL = `${BASE_URL}movie/${id}${KEY}`;\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeMovieDetailsData(data);\n  },\n\n  async fetchCast(id) {\n    const URL = `${BASE_URL}movie/${id}/credits${KEY}`;\n\n    const response = await fetch(URL);\n    const { cast } = await response.json();\n\n    return normalizeCastData(cast);\n  },\n\n  async fetchReviews(id) {\n    const URL = `${BASE_URL}movie/${id}/reviews${KEY}`;\n\n    const response = await fetch(URL);\n    const { results } = await response.json();\n\n    return normalizeReviewData(results);\n  },\n\n  async fetchMoviesByQuery(query) {\n    const URL = `${BASE_URL}search/movie${KEY}&query=${query}`;\n\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    return normalizeTrendingAndQueryData(data.results);\n  },\n};\n","export function normalizeMovieDetailsData(dataObj) {\n  return {\n    title: dataObj.title,\n    userScore: Math.floor(Math.ceil(dataObj.vote_average * 100) / 10) + '%',\n    overview: dataObj.overview,\n    genres: dataObj.genres.map(genre => genre.name).join(', '),\n    year: new Date(dataObj.release_date).getFullYear(),\n    imageUrl: dataObj.poster_path\n      ? `https://image.tmdb.org/t/p/w500${dataObj.poster_path}`\n      : 'https://cdn.pixabay.com/photo/2017/03/13/17/25/clapper-2140602_960_720.jpg',\n  };\n}\n","export function normalizeCastData(dataArr) {\n  return dataArr\n    .filter(el => el.profile_path)\n    .map(({ cast_id, character, name, profile_path }) => ({\n      id: cast_id,\n      character,\n      name,\n      imageUrl: `https://image.tmdb.org/t/p/w300${profile_path}`,\n    }));\n}\n","export function normalizeReviewData(dataArr) {\n  return dataArr.map(({ author, content, id }) => ({ author, content, id }));\n}\n"],"names":["List","styled","ListItem","ImageWrapper","StyledLink","Link","TitleWrapper","Image","MoviesGallery","moviesArr","location","useLocation","map","id","title","imageUrl","to","state","from","src","alt","width","FormWrapper","SearchForm","Button","ButtonLabel","SearchInput","Searchbar","onSubmit","useState","query","setQuery","evt","preventDefault","trim","type","size","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","Movies","useSearchParams","searchParams","setSearchParams","get","searchQuery","setSearchQuery","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","MoviesAPI","data","console","log","style","fontSize","color","textAlign","Loader","normalizeTrendingAndQueryData","dataArr","poster_path","BASE_URL","KEY","fetchTrending","URL","fetch","response","json","results","fetchMovieDetails","dataObj","userScore","Math","floor","ceil","vote_average","overview","genres","genre","name","join","year","Date","release_date","getFullYear","fetchCast","cast","filter","el","profile_path","cast_id","character","fetchReviews","author","content","fetchMoviesByQuery"],"sourceRoot":""}